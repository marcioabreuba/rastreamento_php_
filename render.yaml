services:
  - type: web
    name: traquementophp
    env: docker
    dockerfilePath: ./Dockerfile
    dockerContext: .
    plan: starter
    healthCheckPath: /
    envVars:
      - key: APP_ENV
        value: production
      - key: APP_DEBUG
        value: false
      - key: CACHE_DRIVER
        value: redis
      - key: SESSION_DRIVER
        value: redis
      - key: QUEUE_CONNECTION
        value: redis
      - key: FILESYSTEM_DISK
        value: local
      - key: REDIS_ENABLED
        value: true
      - key: REDIS_HOST
        value: redis-17623.c74.us-east-1-4.ec2.redns.redis-cloud.com
      - key: REDIS_PASSWORD
        value: TGT9TZNhbBTr0mlmpFlCFQMVKqJAXOoB
      - key: REDIS_PORT
        value: 17623
      - key: PORT
        value: 8080
      - key: RENDER
        value: true
      - key: RENDER_DATABASE_URL
        fromDatabase:
          name: traquementophp-db
          property: connectionString
    buildCommand: |
      set -e
      echo "[BuildCommand] Iniciando..."
      
      echo "[BuildCommand] Configurando e executando geoipupdate..."
      mkdir -p storage/app/geoip
      echo "AccountId ${MAXMIND_ACCOUNT_ID}" > /tmp/GeoIP.conf
      echo "LicenseKey ${MAXMIND_LICENSE_KEY}" >> /tmp/GeoIP.conf
      echo "EditionIDs GeoLite2-City" >> /tmp/GeoIP.conf # Adicione outras edições se necessário, e.g., GeoLite2-Country
      
      echo "[BuildCommand] Conteúdo do /tmp/GeoIP.conf:"
      cat /tmp/GeoIP.conf
      
      geoipupdate -v -f /tmp/GeoIP.conf -d storage/app/geoip
      echo "[BuildCommand] geoipupdate concluído."
      
      echo "[BuildCommand] Executando otimizações e migrações Laravel..."
      php artisan config:cache && \
      php artisan route:cache && \
      php artisan view:cache && \
      php artisan event:cache && \
      php artisan migrate:fresh --force --seed
      echo "[BuildCommand] Otimizações e migrações Laravel concluídas."
    startCommand: /usr/local/bin/start.sh

databases:
  - name: traquementophp-db
    plan: starter
    type: postgres
    ipAllowList: [] 